{"version":3,"file":"ngx-alerts.js","sources":["../../../projects/ngx-alerts/src/lib/alert.config.ts","../../../projects/ngx-alerts/src/lib/service/alert.reducer.ts","../../../projects/ngx-alerts/src/lib/service/alert.service.ts","../../../projects/ngx-alerts/src/lib/component/alert.component.ts","../../../projects/ngx-alerts/src/lib/alert.module.ts","../../../projects/ngx-alerts/src/ngx-alerts.ts"],"names":[],"mappings":"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","sourcesContent":["import {AlertConfig} from './model/alert-config.model';\nimport {InjectionToken} from '@angular/core';\n\nexport const ALERT_CONFIG = new InjectionToken<AlertConfig>('config');\n","import {AlertConfig} from '../model/alert-config.model';\nimport {Alert} from '../model/alert.model';\n\n// @dynamic\nexport class AlertReducer {\n\n  public static reduce(state: Alert[], action: { fn: Function, alert: Alert, config: AlertConfig }): Alert[] {\n    return action.fn(state, {alert: action.alert, config: action.config});\n  }\n\n  public static add(state: Alert[], params: {alert: Alert, config: AlertConfig}): Alert[] {\n    const output = [\n      params.alert,\n      ...state\n    ];\n    if (output.length > params.config.maxMessages) {\n      output.pop();\n    }\n    return output;\n  }\n\n  public static remove(state: Alert[], params: {alert: Alert, config: AlertConfig}): Alert[] {\n    return state.filter(alert => alert !== params.alert);\n  }\n}\n","import {Inject, Injectable} from '@angular/core';\nimport {Alert} from '../model/alert.model';\nimport {BehaviorSubject, Observable, Subject, timer} from 'rxjs';\nimport {ALERT_CONFIG} from '../alert.config';\nimport {AlertConfig} from '../model/alert-config.model';\nimport {scan, take} from 'rxjs/operators';\nimport {AlertReducer} from './alert.reducer';\n\n@Injectable()\nexport class AlertService {\n\n  private dispatcher = new Subject<{ fn: Function, alert: Alert, config: AlertConfig }>();\n  private state = new BehaviorSubject<Alert[]>([]);\n\n  constructor(@Inject(ALERT_CONFIG) private config: AlertConfig) {\n    this.initConfig();\n    this.dispatcher\n      .pipe(\n        scan(AlertReducer.reduce, [])\n      )\n      .subscribe(this.state);\n  }\n\n  private initConfig(): void {\n    if (!this.config) {\n      this.config = {};\n    }\n    this.config.timeout = !!this.config.timeout ? this.config.timeout : 5000;\n    this.config.maxMessages = !!this.config.maxMessages ? this.config.maxMessages : 5;\n  }\n\n  public get messages(): Observable<Alert[]> {\n    return this.state.asObservable();\n  }\n\n  public info(msg: string | { html: string }): void {\n    this.addAlert({content: msg, type: 'info'});\n  }\n\n  public danger(msg: string | { html: string }): void {\n    this.addAlert({content: msg, type: 'danger'});\n  }\n\n  public success(msg: string | { html: string }): void {\n    this.addAlert({content: msg, type: 'success'});\n  }\n\n  public warning(msg: string | { html: string }): void {\n    this.addAlert({content: msg, type: 'warning'});\n  }\n\n  public close(alert: Alert): void {\n    this.dispatcher.next({fn: AlertReducer.remove, alert: alert, config: this.config});\n  }\n\n  private addAlert(alert: Alert): void {\n    this.dispatcher.next({fn: AlertReducer.add, alert: alert, config: this.config});\n\n    if (this.config.timeout > 0) {\n      timer(this.config.timeout)\n        .pipe(take(1))\n        .subscribe(() => {\n          this.dispatcher.next({fn: AlertReducer.remove, alert: alert, config: this.config});\n        });\n    }\n  }\n}\n","import {ChangeDetectionStrategy, Component, Inject, OnInit} from '@angular/core';\nimport {AlertService} from '../service/alert.service';\nimport {Alert} from '../model/alert.model';\nimport {animate, state, style, transition, trigger} from '@angular/animations';\nimport {Observable} from 'rxjs';\nimport {ALERT_CONFIG} from '../alert.config';\nimport {AlertConfig} from '../model/alert-config.model';\n\n@Component({\n  selector: 'ngx-alerts',\n  templateUrl: './alert.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  styleUrls: ['./alert.component.scss'],\n  animations: [\n    trigger('animationRight', [\n      state('shown', style({transform: 'translateX(0)', opacity: 0.8})),\n      transition(':enter', [\n        style({transform: 'translateX(100%)', opacity: 0}),\n        animate('300ms 100ms ease', style({transform: 'translateX(0)', opacity: 0.8}))\n      ]),\n      transition(':leave', [\n        style({transform: 'translateX(0)', opacity: 0.8}),\n        animate('200ms ease-out', style({transform: 'translateX(100%)', opacity: 0}))\n      ])]\n    ),\n    trigger('animationLeft', [\n      state('shown', style({transform: 'translateX(0)', opacity: 0.8})),\n      transition(':enter', [\n        style({transform: 'translateX(-100%)', opacity: 0}),\n        animate('300ms 100ms ease', style({transform: 'translateX(0)', opacity: 0.8}))\n      ]),\n      transition(':leave', [\n        style({transform: 'translateX(0)', opacity: 0.8}),\n        animate('200ms ease-out', style({transform: 'translateX(-100%)', opacity: 0}))\n      ])]\n    )\n  ]\n})\nexport class AlertComponent implements OnInit {\n\n  alerts: Observable<Alert[]>;\n\n  constructor(\n    @Inject(ALERT_CONFIG) private config: AlertConfig,\n    private alertService: AlertService) {\n    this.initConfig();\n  }\n\n  ngOnInit() {\n    this.alerts = this.alertService.messages;\n  }\n\n  close(alert: Alert) {\n    this.alertService.close(alert);\n  }\n\n  get position() {\n    return this.config.position;\n  }\n\n  private initConfig(): void {\n    if (!this.config) {\n      this.config = {};\n    }\n    this.config.position = !!this.config.position ? this.config.position : 'right';\n  }\n}\n","import {ModuleWithProviders, NgModule} from '@angular/core';\nimport {AlertComponent} from './component/alert.component';\nimport {AlertService} from './service/alert.service';\nimport {CommonModule} from '@angular/common';\nimport {ALERT_CONFIG} from './alert.config';\nimport {AlertConfig} from './model/alert-config.model';\n\n@NgModule({\n    declarations: [\n        AlertComponent\n    ],\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        AlertComponent\n    ]\n})\nexport class AlertModule {\n    static forRoot(config?: AlertConfig): ModuleWithProviders<AlertModule> {\n        return {\n            ngModule: AlertModule,\n            providers: [\n                AlertService,\n                {provide: ALERT_CONFIG, useValue: config}\n            ]\n        };\n    }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {ALERT_CONFIG as ɵa} from './lib/alert.config';\nexport {AlertComponent as ɵb} from './lib/component/alert.component';"]}